version: '2'
services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: scrpl_rabbit
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 15672:15672
      - 5672:5672

  mongodb:
    image: mongo:3.0.2
    container_name: scrpl_mongo
    restart: always
    volumes:
      - "../mongo_data:/data/db"
    ports:
      - 27017:27017

  api:
    build: ./api
    restart: always
    command: npm run dev
    tty: true
    environment:
      - COMPOSE_HTTP_TIMEOUT=200
      - NODE_ENV=development
    env_file:
      - './config/env/production.env'
      # - './config/env/development.env'
    depends_on:
      - rabbitmq
      - mongodb

  worker:
    build: ./worker
    restart: always
    command: npm run dev
    tty: true
    environment:
      - COMPOSE_HTTP_TIMEOUT=200
      - NODE_ENV=development
    env_file:
      - './config/env/production.env'
      # - './config/env/development.env'
    depends_on:
      - rabbitmq
      - mongodb

  webapp:
    build: ./webapp
    restart: always
    command: npm run dev
    tty: true
    environment:
      - COMPOSE_HTTP_TIMEOUT=200
      - NODE_ENV=development
    # env_file:
      # - './config/env/production.env'
      # - './config/env/development.env'
    depends_on:
      - rabbitmq
      - api
      - mongodb
